# ------------------------------------------------------------------------------------------------------------------------------------------------------
# Simulation DRE_DMX_UT_0060
# ------------------------------------------------------------------------------------------------------------------------------------------------------
#             (0 ps) **********************************************************************************************
#             (0 ps)   Test: EP command, DATA_ACQ_MODE register
#             (0 ps) **********************************************************************************************
#             (0 ps) 
#             (0 ps) ==============================================================================================
#             (0 ps)   Enable MUX SQUID ADC clocks reports display
#             (0 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (0 ps) Report display activated: clk_sqm_adc(0)
# ** Note   : (0 ps) Report display activated: clk_sqm_adc(1)
# ** Note   : (0 ps) Report display activated: clk_sqm_adc(2)
# ** Note   : (0 ps) Report display activated: clk_sqm_adc(3)
#             (0 ps) 
#             (0 ps) ==============================================================================================
#             (0 ps)   Asynchronous reset activated
#             (0 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (0 ps) Write discrete: arst_n = '0'
# ** Note   : (80000 ps) Waiting time for 80000 ps
#             (80000 ps) 
#             (80000 ps) ==============================================================================================
#             (80000 ps)   Asynchronous reset deactivated
#             (80000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (80000 ps) Write discrete: arst_n = '1'
#             (80000 ps) 
#             (80000 ps) ==============================================================================================
#             (80000 ps)   Wait internal reset deactivated
#             (80000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (6995496 ps) Waiting event rst = '0' for 6915496 ps
#             (6995496 ps) 
#             (6995496 ps) ==============================================================================================
#             (6995496 ps)   TEST_PATTERN: writing maximum first index for allowing test pattern generation
#             (6995496 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (6995496 ps) Send SPI command value 8205_0003 (TEST_PATTERN, mode Write, data 0003)
# ** Note   : (9312000 ps) Waiting SPI command end for 2280504 ps
# ** Note   : (9312000 ps) Send SPI command value 821D_0003 (TEST_PATTERN, mode Write, data 0003)
# ** Note   : (11634000 ps) Waiting SPI command end for 2286000 ps
#             (11634000 ps) 
#             (11634000 ps) ==============================================================================================
#             (11634000 ps)   Start DATA_ACQ_MODE register test
#             (11634000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (11634000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (13956000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (13956000 ps) Send SPI command value 8001_0001 (DATA_ACQ_MODE, mode Write, data 0001)
# ** Note   : (16278000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (16278000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (16350000 ps) Waiting SPI command return end for 36000 ps
#             (16350000 ps) 
#             (16350000 ps) ==============================================================================================
#             (16350000 ps)   Check DATA_ACQ_MODE content at start: Idle
#             (16350000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (16368000 ps) Check command return: PASS
# ** Note   : (16368000 ps)  * Read 8000_0000, expected value 8000_0000 (DATA_ACQ_MODE, mode Read, data 0000)
# ** Note   : (18600000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (18600000 ps) Send SPI command value 8001_0002 (DATA_ACQ_MODE, mode Write, data 0002)
# ** Note   : (18672000 ps) Waiting SPI command return end for 36000 ps
#             (18672000 ps) 
#             (18672000 ps) ==============================================================================================
#             (18672000 ps)   Check no error after write DATA_ACQ_MODE command
#             (18672000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (18690000 ps) Check command return: PASS
# ** Note   : (18690000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (20922000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (20922000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (20994000 ps) Waiting SPI command return end for 36000 ps
#             (20994000 ps) 
#             (20994000 ps) ==============================================================================================
#             (20994000 ps)   Check DATA_ACQ_MODE new content: Science
#             (20994000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (21012000 ps) Check command return: PASS
# ** Note   : (21012000 ps)  * Read 8000_0001, expected value 8000_0001 (DATA_ACQ_MODE, mode Read, data 0001)
# ** Note   : (23244000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (23244000 ps) Send SPI command value 8001_0007 (DATA_ACQ_MODE, mode Write, data 0007)
# ** Note   : (23316000 ps) Waiting SPI command return end for 36000 ps
#             (23316000 ps) 
#             (23316000 ps) ==============================================================================================
#             (23316000 ps)   Check no error after write DATA_ACQ_MODE command
#             (23316000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (23334000 ps) Check command return: PASS
# ** Note   : (23334000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (25566000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (25566000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (25638000 ps) Waiting SPI command return end for 36000 ps
#             (25638000 ps) 
#             (25638000 ps) ==============================================================================================
#             (25638000 ps)   Check DATA_ACQ_MODE new content: Error Signal
#             (25638000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (25656000 ps) Check command return: PASS
# ** Note   : (25656000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (27888000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (27888000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (27960000 ps) Waiting SPI command return end for 36000 ps
#             (27960000 ps) 
#             (27960000 ps) ==============================================================================================
#             (27960000 ps)   Check no error after write DATA_ACQ_MODE command
#             (27960000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (27978000 ps) Check command return: PASS
# ** Note   : (27978000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (30210000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (30210000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (30282000 ps) Waiting SPI command return end for 36000 ps
#             (30282000 ps) 
#             (30282000 ps) ==============================================================================================
#             (30282000 ps)   Check DATA_ACQ_MODE new content: Test pattern
#             (30282000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (30300000 ps) Check command return: PASS
# ** Note   : (30300000 ps)  * Read 8000_0007, expected value 8000_0007 (DATA_ACQ_MODE, mode Read, data 0007)
# ** Note   : (32532000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (32532000 ps) Send SPI command value 82A1_0021 (TEST_PATTERN_ENABLE, mode Write, data 0021)
# ** Note   : (34854000 ps) Waiting SPI command end for 2286000 ps
#             (34854000 ps) 
#             (34854000 ps) ==============================================================================================
#             (34854000 ps)   Wait end of test pattern mode
#             (34854000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (38115048 ps) Waiting event sync = '1' for 3261048 ps
# ** Note   : (38275128 ps) Waiting event sync = '0' for 160080 ps
# ** Note   : (43557768 ps) Waiting event sync = '1' for 5282640 ps
# ** Note   : (43717848 ps) Waiting event sync = '0' for 160080 ps
# ** Note   : (49000488 ps) Waiting event sync = '1' for 5282640 ps
# ** Note   : (49160568 ps) Waiting event sync = '0' for 160080 ps
# ** Note   : (54443208 ps) Waiting event sync = '1' for 5282640 ps
# ** Note   : (54603288 ps) Waiting event sync = '0' for 160080 ps
# ** Note   : (54603288 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (56922000 ps) Waiting SPI command end for 2282712 ps
# ** Note   : (56922000 ps) Send SPI command value 8001_0004 (DATA_ACQ_MODE, mode Write, data 0004)
# ** Note   : (59244000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (59244000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (59316000 ps) Waiting SPI command return end for 36000 ps
#             (59316000 ps) 
#             (59316000 ps) ==============================================================================================
#             (59316000 ps)   Check DATA_ACQ_MODE goes to Idle mode
#             (59316000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (59334000 ps) Check command return: PASS
# ** Note   : (59334000 ps)  * Read 8000_0000, expected value 8000_0000 (DATA_ACQ_MODE, mode Read, data 0000)
# ** Note   : (61566000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (61566000 ps) Send SPI command value 8001_0001 (DATA_ACQ_MODE, mode Write, data 0001)
# ** Note   : (61638000 ps) Waiting SPI command return end for 36000 ps
#             (61638000 ps) 
#             (61638000 ps) ==============================================================================================
#             (61638000 ps)   Check no error after write DATA_ACQ_MODE command
#             (61638000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (61656000 ps) Check command return: PASS
# ** Note   : (61656000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (63888000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (63888000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (63960000 ps) Waiting SPI command return end for 36000 ps
#             (63960000 ps) 
#             (63960000 ps) ==============================================================================================
#             (63960000 ps)   Check DATA_ACQ_MODE new content: Dump
#             (63960000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (63978000 ps) Check command return: PASS
# ** Note   : (63978000 ps)  * Read 8000_0004, expected value 8000_0004 (DATA_ACQ_MODE, mode Read, data 0004)
# ** Note   : (66210000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (66210000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (66282000 ps) Waiting SPI command return end for 36000 ps
#             (66282000 ps) 
#             (66282000 ps) ==============================================================================================
#             (66282000 ps)   Check error Last command discarded appears
#             (66282000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (66300000 ps) Check command return: PASS
# ** Note   : (66300000 ps)  * Read C000_FBFF, expected value C000_FBFF (Status, mode Read, data FBFF)
# ** Note   : (68532000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (68532000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (68604000 ps) Waiting SPI command return end for 36000 ps
#             (68604000 ps) 
#             (68604000 ps) ==============================================================================================
#             (68604000 ps)   Check DATA_ACQ_MODE stay to Dump mode
#             (68604000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (68622000 ps) Check command return: PASS
# ** Note   : (68622000 ps)  * Read 8000_0004, expected value 8000_0004 (DATA_ACQ_MODE, mode Read, data 0004)
#             (68622000 ps) 
#             (68622000 ps) ==============================================================================================
#             (68622000 ps)   Wait end of dump mode
#             (68622000 ps)   (c_DMP_SEQ_ACQ_NB * c_MUX_FACT * c_PIXEL_ADC_NB_CYC * c_SC_DATA_SER_W_S * c_CLK_REF_PER_DEF)
#             (68622000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (244622000 ps) Waiting time for 176000000 ps
# ** Note   : (244622000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (246930000 ps) Waiting SPI command end for 2272000 ps
# ** Note   : (246930000 ps) Send SPI command value 8001_0007 (DATA_ACQ_MODE, mode Write, data 0007)
# ** Note   : (249252000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (249252000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (249324000 ps) Waiting SPI command return end for 36000 ps
#             (249324000 ps) 
#             (249324000 ps) ==============================================================================================
#             (249324000 ps)   Check DATA_ACQ_MODE goes to Idle mode
#             (249324000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (249342000 ps) Check command return: PASS
# ** Note   : (249342000 ps)  * Read 8000_0000, expected value 8000_0000 (DATA_ACQ_MODE, mode Read, data 0000)
# ** Note   : (251574000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (251574000 ps) Send SPI command value 8001_0004 (DATA_ACQ_MODE, mode Write, data 0004)
# ** Note   : (251646000 ps) Waiting SPI command return end for 36000 ps
#             (251646000 ps) 
#             (251646000 ps) ==============================================================================================
#             (251646000 ps)   Check no error after write DATA_ACQ_MODE command
#             (251646000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (251664000 ps) Check command return: PASS
# ** Note   : (251664000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (253896000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (253896000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (253968000 ps) Waiting SPI command return end for 36000 ps
#             (253968000 ps) 
#             (253968000 ps) ==============================================================================================
#             (253968000 ps)   Check DATA_ACQ_MODE new content: Test Pattern
#             (253968000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (253986000 ps) Check command return: PASS
# ** Note   : (253986000 ps)  * Read 8000_0007, expected value 8000_0007 (DATA_ACQ_MODE, mode Read, data 0007)
# ** Note   : (256218000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (256218000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (256290000 ps) Waiting SPI command return end for 36000 ps
#             (256290000 ps) 
#             (256290000 ps) ==============================================================================================
#             (256290000 ps)   Check no error after write DATA_ACQ_MODE command
#             (256290000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (256308000 ps) Check command return: PASS
# ** Note   : (256308000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (258540000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (258540000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (258612000 ps) Waiting SPI command return end for 36000 ps
#             (258612000 ps) 
#             (258612000 ps) ==============================================================================================
#             (258612000 ps)   Check DATA_ACQ_MODE new content: Dump
#             (258612000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (258630000 ps) Check command return: PASS
# ** Note   : (258630000 ps)  * Read 8000_0004, expected value 8000_0004 (DATA_ACQ_MODE, mode Read, data 0004)
#             (258630000 ps) 
#             (258630000 ps) ==============================================================================================
#             (258630000 ps)   Wait end of dump mode
#             (258630000 ps)   (c_DMP_SEQ_ACQ_NB * c_MUX_FACT * c_PIXEL_ADC_NB_CYC * c_SC_DATA_SER_W_S * c_CLK_REF_PER_DEF)
#             (258630000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (434630000 ps) Waiting time for 176000000 ps
# ** Note   : (434630000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (436938000 ps) Waiting SPI command end for 2272000 ps
# ** Note   : (436938000 ps) Send SPI command value 8001_0001 (DATA_ACQ_MODE, mode Write, data 0001)
# ** Note   : (439260000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (439260000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (439332000 ps) Waiting SPI command return end for 36000 ps
#             (439332000 ps) 
#             (439332000 ps) ==============================================================================================
#             (439332000 ps)   Check DATA_ACQ_MODE goes to Idle mode
#             (439332000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (439350000 ps) Check command return: PASS
# ** Note   : (439350000 ps)  * Read 8000_0000, expected value 8000_0000 (DATA_ACQ_MODE, mode Read, data 0000)
# ** Note   : (441582000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (441582000 ps) Send SPI command value 8001_0004 (DATA_ACQ_MODE, mode Write, data 0004)
# ** Note   : (441654000 ps) Waiting SPI command return end for 36000 ps
#             (441654000 ps) 
#             (441654000 ps) ==============================================================================================
#             (441654000 ps)   Check no error after write DATA_ACQ_MODE command
#             (441654000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (441672000 ps) Check command return: PASS
# ** Note   : (441672000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (443904000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (443904000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (443976000 ps) Waiting SPI command return end for 36000 ps
#             (443976000 ps) 
#             (443976000 ps) ==============================================================================================
#             (443976000 ps)   Check DATA_ACQ_MODE new content: Science
#             (443976000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (443994000 ps) Check command return: PASS
# ** Note   : (443994000 ps)  * Read 8000_0001, expected value 8000_0001 (DATA_ACQ_MODE, mode Read, data 0001)
# ** Note   : (446226000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (446226000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (446298000 ps) Waiting SPI command return end for 36000 ps
#             (446298000 ps) 
#             (446298000 ps) ==============================================================================================
#             (446298000 ps)   Check no error after write DATA_ACQ_MODE command
#             (446298000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (446316000 ps) Check command return: PASS
# ** Note   : (446316000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (448548000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (448548000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (448620000 ps) Waiting SPI command return end for 36000 ps
#             (448620000 ps) 
#             (448620000 ps) ==============================================================================================
#             (448620000 ps)   Check DATA_ACQ_MODE new content: Dump
#             (448620000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (448638000 ps) Check command return: PASS
# ** Note   : (448638000 ps)  * Read 8000_0004, expected value 8000_0004 (DATA_ACQ_MODE, mode Read, data 0004)
#             (448638000 ps) 
#             (448638000 ps) ==============================================================================================
#             (448638000 ps)   Wait end of dump mode
#             (448638000 ps)   (c_DMP_SEQ_ACQ_NB * c_MUX_FACT * c_PIXEL_ADC_NB_CYC * c_SC_DATA_SER_W_S * c_CLK_REF_PER_DEF)
#             (448638000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (624638000 ps) Waiting time for 176000000 ps
# ** Note   : (624638000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (626946000 ps) Waiting SPI command end for 2272000 ps
# ** Note   : (626946000 ps) Send SPI command value 8001_0002 (DATA_ACQ_MODE, mode Write, data 0002)
# ** Note   : (629268000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (629268000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (629340000 ps) Waiting SPI command return end for 36000 ps
#             (629340000 ps) 
#             (629340000 ps) ==============================================================================================
#             (629340000 ps)   Check DATA_ACQ_MODE goes back to Science mode
#             (629340000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (629358000 ps) Check command return: PASS
# ** Note   : (629358000 ps)  * Read 8000_0001, expected value 8000_0001 (DATA_ACQ_MODE, mode Read, data 0001)
# ** Note   : (631590000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (631590000 ps) Send SPI command value 8001_0004 (DATA_ACQ_MODE, mode Write, data 0004)
# ** Note   : (631662000 ps) Waiting SPI command return end for 36000 ps
#             (631662000 ps) 
#             (631662000 ps) ==============================================================================================
#             (631662000 ps)   Check no error after write DATA_ACQ_MODE command
#             (631662000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (631680000 ps) Check command return: PASS
# ** Note   : (631680000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (633912000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (633912000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (633984000 ps) Waiting SPI command return end for 36000 ps
#             (633984000 ps) 
#             (633984000 ps) ==============================================================================================
#             (633984000 ps)   Check DATA_ACQ_MODE new content: Error signal
#             (633984000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (634002000 ps) Check command return: PASS
# ** Note   : (634002000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (636234000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (636234000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (636306000 ps) Waiting SPI command return end for 36000 ps
#             (636306000 ps) 
#             (636306000 ps) ==============================================================================================
#             (636306000 ps)   Check no error after write DATA_ACQ_MODE command
#             (636306000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (636324000 ps) Check command return: PASS
# ** Note   : (636324000 ps)  * Read C000_FFFF, expected value C000_FFFF (Status, mode Read, data FFFF)
# ** Note   : (638556000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (638556000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (638628000 ps) Waiting SPI command return end for 36000 ps
#             (638628000 ps) 
#             (638628000 ps) ==============================================================================================
#             (638628000 ps)   Check DATA_ACQ_MODE new content: Dump
#             (638628000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (638646000 ps) Check command return: PASS
# ** Note   : (638646000 ps)  * Read 8000_0004, expected value 8000_0004 (DATA_ACQ_MODE, mode Read, data 0004)
#             (638646000 ps) 
#             (638646000 ps) ==============================================================================================
#             (638646000 ps)   Wait end of dump mode
#             (638646000 ps)   (c_DMP_SEQ_ACQ_NB * c_MUX_FACT * c_PIXEL_ADC_NB_CYC * c_SC_DATA_SER_W_S * c_CLK_REF_PER_DEF)
#             (638646000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (814646000 ps) Waiting time for 176000000 ps
# ** Note   : (814646000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (816954000 ps) Waiting SPI command end for 2272000 ps
# ** Note   : (816954000 ps) Send SPI command value 8001_XXX3 (DATA_ACQ_MODE, mode Write, data XXX3)
# ** Note   : (819276000 ps) Waiting SPI command end for 2286000 ps
# ** Note   : (819276000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (819348000 ps) Waiting SPI command return end for 36000 ps
#             (819348000 ps) 
#             (819348000 ps) ==============================================================================================
#             (819348000 ps)   Check DATA_ACQ_MODE goes back to Error signal mode
#             (819348000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (819366000 ps) Check command return: PASS
# ** Note   : (819366000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (821598000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (821598000 ps) Send SPI command value 8001_XXX8 (DATA_ACQ_MODE, mode Write, data XXX8)
# ** Note   : (821670000 ps) Waiting SPI command return end for 36000 ps
#             (821670000 ps) 
#             (821670000 ps) ==============================================================================================
#             (821670000 ps)   Check error position SPI data out of range detected
#             (821670000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (821688000 ps) Check command return: PASS
# ** Note   : (821688000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (823920000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (823920000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (823992000 ps) Waiting SPI command return end for 36000 ps
#             (823992000 ps) 
#             (823992000 ps) ==============================================================================================
#             (823992000 ps)   Check DATA_ACQ_MODE no change
#             (823992000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (824010000 ps) Check command return: PASS
# ** Note   : (824010000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (826242000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (826242000 ps) Send SPI command value 8001_XX1X (DATA_ACQ_MODE, mode Write, data XX1X)
# ** Note   : (826314000 ps) Waiting SPI command return end for 36000 ps
#             (826314000 ps) 
#             (826314000 ps) ==============================================================================================
#             (826314000 ps)   Check error position SPI data out of range detected
#             (826314000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (826332000 ps) Check command return: PASS
# ** Note   : (826332000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (828564000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (828564000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (828636000 ps) Waiting SPI command return end for 36000 ps
#             (828636000 ps) 
#             (828636000 ps) ==============================================================================================
#             (828636000 ps)   Check DATA_ACQ_MODE no change
#             (828636000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (828654000 ps) Check command return: PASS
# ** Note   : (828654000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (830886000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (830886000 ps) Send SPI command value 8001_XX2X (DATA_ACQ_MODE, mode Write, data XX2X)
# ** Note   : (830958000 ps) Waiting SPI command return end for 36000 ps
#             (830958000 ps) 
#             (830958000 ps) ==============================================================================================
#             (830958000 ps)   Check error position SPI data out of range detected
#             (830958000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (830976000 ps) Check command return: PASS
# ** Note   : (830976000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (833208000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (833208000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (833280000 ps) Waiting SPI command return end for 36000 ps
#             (833280000 ps) 
#             (833280000 ps) ==============================================================================================
#             (833280000 ps)   Check DATA_ACQ_MODE no change
#             (833280000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (833298000 ps) Check command return: PASS
# ** Note   : (833298000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (835530000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (835530000 ps) Send SPI command value 8001_XX4X (DATA_ACQ_MODE, mode Write, data XX4X)
# ** Note   : (835602000 ps) Waiting SPI command return end for 36000 ps
#             (835602000 ps) 
#             (835602000 ps) ==============================================================================================
#             (835602000 ps)   Check error position SPI data out of range detected
#             (835602000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (835620000 ps) Check command return: PASS
# ** Note   : (835620000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (837852000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (837852000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (837924000 ps) Waiting SPI command return end for 36000 ps
#             (837924000 ps) 
#             (837924000 ps) ==============================================================================================
#             (837924000 ps)   Check DATA_ACQ_MODE no change
#             (837924000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (837942000 ps) Check command return: PASS
# ** Note   : (837942000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (840174000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (840174000 ps) Send SPI command value 8001_XX8X (DATA_ACQ_MODE, mode Write, data XX8X)
# ** Note   : (840246000 ps) Waiting SPI command return end for 36000 ps
#             (840246000 ps) 
#             (840246000 ps) ==============================================================================================
#             (840246000 ps)   Check error position SPI data out of range detected
#             (840246000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (840264000 ps) Check command return: PASS
# ** Note   : (840264000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (842496000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (842496000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (842568000 ps) Waiting SPI command return end for 36000 ps
#             (842568000 ps) 
#             (842568000 ps) ==============================================================================================
#             (842568000 ps)   Check DATA_ACQ_MODE no change
#             (842568000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (842586000 ps) Check command return: PASS
# ** Note   : (842586000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (844818000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (844818000 ps) Send SPI command value 8001_X1XX (DATA_ACQ_MODE, mode Write, data X1XX)
# ** Note   : (844890000 ps) Waiting SPI command return end for 36000 ps
#             (844890000 ps) 
#             (844890000 ps) ==============================================================================================
#             (844890000 ps)   Check error position SPI data out of range detected
#             (844890000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (844908000 ps) Check command return: PASS
# ** Note   : (844908000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (847140000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (847140000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (847212000 ps) Waiting SPI command return end for 36000 ps
#             (847212000 ps) 
#             (847212000 ps) ==============================================================================================
#             (847212000 ps)   Check DATA_ACQ_MODE no change
#             (847212000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (847230000 ps) Check command return: PASS
# ** Note   : (847230000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (849462000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (849462000 ps) Send SPI command value 8001_X2XX (DATA_ACQ_MODE, mode Write, data X2XX)
# ** Note   : (849534000 ps) Waiting SPI command return end for 36000 ps
#             (849534000 ps) 
#             (849534000 ps) ==============================================================================================
#             (849534000 ps)   Check error position SPI data out of range detected
#             (849534000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (849552000 ps) Check command return: PASS
# ** Note   : (849552000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (851784000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (851784000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (851856000 ps) Waiting SPI command return end for 36000 ps
#             (851856000 ps) 
#             (851856000 ps) ==============================================================================================
#             (851856000 ps)   Check DATA_ACQ_MODE no change
#             (851856000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (851874000 ps) Check command return: PASS
# ** Note   : (851874000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (854106000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (854106000 ps) Send SPI command value 8001_X4XX (DATA_ACQ_MODE, mode Write, data X4XX)
# ** Note   : (854178000 ps) Waiting SPI command return end for 36000 ps
#             (854178000 ps) 
#             (854178000 ps) ==============================================================================================
#             (854178000 ps)   Check error position SPI data out of range detected
#             (854178000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (854196000 ps) Check command return: PASS
# ** Note   : (854196000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (856428000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (856428000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (856500000 ps) Waiting SPI command return end for 36000 ps
#             (856500000 ps) 
#             (856500000 ps) ==============================================================================================
#             (856500000 ps)   Check DATA_ACQ_MODE no change
#             (856500000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (856518000 ps) Check command return: PASS
# ** Note   : (856518000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (858750000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (858750000 ps) Send SPI command value 8001_X8XX (DATA_ACQ_MODE, mode Write, data X8XX)
# ** Note   : (858822000 ps) Waiting SPI command return end for 36000 ps
#             (858822000 ps) 
#             (858822000 ps) ==============================================================================================
#             (858822000 ps)   Check error position SPI data out of range detected
#             (858822000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (858840000 ps) Check command return: PASS
# ** Note   : (858840000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (861072000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (861072000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (861144000 ps) Waiting SPI command return end for 36000 ps
#             (861144000 ps) 
#             (861144000 ps) ==============================================================================================
#             (861144000 ps)   Check DATA_ACQ_MODE no change
#             (861144000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (861162000 ps) Check command return: PASS
# ** Note   : (861162000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (863394000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (863394000 ps) Send SPI command value 8001_1XXX (DATA_ACQ_MODE, mode Write, data 1XXX)
# ** Note   : (863466000 ps) Waiting SPI command return end for 36000 ps
#             (863466000 ps) 
#             (863466000 ps) ==============================================================================================
#             (863466000 ps)   Check error position SPI data out of range detected
#             (863466000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (863484000 ps) Check command return: PASS
# ** Note   : (863484000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (865716000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (865716000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (865788000 ps) Waiting SPI command return end for 36000 ps
#             (865788000 ps) 
#             (865788000 ps) ==============================================================================================
#             (865788000 ps)   Check DATA_ACQ_MODE no change
#             (865788000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (865806000 ps) Check command return: PASS
# ** Note   : (865806000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (868038000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (868038000 ps) Send SPI command value 8001_2XXX (DATA_ACQ_MODE, mode Write, data 2XXX)
# ** Note   : (868110000 ps) Waiting SPI command return end for 36000 ps
#             (868110000 ps) 
#             (868110000 ps) ==============================================================================================
#             (868110000 ps)   Check error position SPI data out of range detected
#             (868110000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (868128000 ps) Check command return: PASS
# ** Note   : (868128000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (870360000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (870360000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (870432000 ps) Waiting SPI command return end for 36000 ps
#             (870432000 ps) 
#             (870432000 ps) ==============================================================================================
#             (870432000 ps)   Check DATA_ACQ_MODE no change
#             (870432000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (870450000 ps) Check command return: PASS
# ** Note   : (870450000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (872682000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (872682000 ps) Send SPI command value 8001_4XXX (DATA_ACQ_MODE, mode Write, data 4XXX)
# ** Note   : (872754000 ps) Waiting SPI command return end for 36000 ps
#             (872754000 ps) 
#             (872754000 ps) ==============================================================================================
#             (872754000 ps)   Check error position SPI data out of range detected
#             (872754000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (872772000 ps) Check command return: PASS
# ** Note   : (872772000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (875004000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (875004000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (875076000 ps) Waiting SPI command return end for 36000 ps
#             (875076000 ps) 
#             (875076000 ps) ==============================================================================================
#             (875076000 ps)   Check DATA_ACQ_MODE no change
#             (875076000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (875094000 ps) Check command return: PASS
# ** Note   : (875094000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (877326000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (877326000 ps) Send SPI command value 8001_8XXX (DATA_ACQ_MODE, mode Write, data 8XXX)
# ** Note   : (877398000 ps) Waiting SPI command return end for 36000 ps
#             (877398000 ps) 
#             (877398000 ps) ==============================================================================================
#             (877398000 ps)   Check error position SPI data out of range detected
#             (877398000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (877416000 ps) Check command return: PASS
# ** Note   : (877416000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (879648000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (879648000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (879720000 ps) Waiting SPI command return end for 36000 ps
#             (879720000 ps) 
#             (879720000 ps) ==============================================================================================
#             (879720000 ps)   Check DATA_ACQ_MODE no change
#             (879720000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (879738000 ps) Check command return: PASS
# ** Note   : (879738000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (881970000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (881970000 ps) Send SPI command value 8001_XXX5 (DATA_ACQ_MODE, mode Write, data XXX5)
# ** Note   : (882042000 ps) Waiting SPI command return end for 36000 ps
#             (882042000 ps) 
#             (882042000 ps) ==============================================================================================
#             (882042000 ps)   Check error position SPI data out of range detected
#             (882042000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (882060000 ps) Check command return: PASS
# ** Note   : (882060000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (884292000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (884292000 ps) Send SPI command value 8000_XXXX (DATA_ACQ_MODE, mode Read, data XXXX)
# ** Note   : (884364000 ps) Waiting SPI command return end for 36000 ps
#             (884364000 ps) 
#             (884364000 ps) ==============================================================================================
#             (884364000 ps)   Check DATA_ACQ_MODE no change
#             (884364000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (884382000 ps) Check command return: PASS
# ** Note   : (884382000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (886614000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (886614000 ps) Send SPI command value 8001_XXX6 (DATA_ACQ_MODE, mode Write, data XXX6)
# ** Note   : (886686000 ps) Waiting SPI command return end for 36000 ps
#             (886686000 ps) 
#             (886686000 ps) ==============================================================================================
#             (886686000 ps)   Check error position SPI data out of range detected
#             (886686000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (886704000 ps) Check command return: PASS
# ** Note   : (886704000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ** Note   : (888936000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (888936000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (889008000 ps) Waiting SPI command return end for 36000 ps
#             (889008000 ps) 
#             (889008000 ps) ==============================================================================================
#             (889008000 ps)   Check DATA_ACQ_MODE no change
#             (889008000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (889026000 ps) Check command return: PASS
# ** Note   : (889026000 ps)  * Read 8000_0002, expected value 8000_0002 (DATA_ACQ_MODE, mode Read, data 0002)
# ** Note   : (891258000 ps) Waiting SPI command end for 2232000 ps
# ** Note   : (891258000 ps) Send SPI command value C000_XXXX (Status, mode Read, data XXXX)
# ** Note   : (891330000 ps) Waiting SPI command return end for 36000 ps
#             (891330000 ps) 
#             (891330000 ps) ==============================================================================================
#             (891330000 ps)   Check error position SPI data out of range detected
#             (891330000 ps) ----------------------------------------------------------------------------------------------
# ** Note   : (891348000 ps) Check command return: PASS
# ** Note   : (891348000 ps)  * Read C000_EFFF, expected value C000_EFFF (Status, mode Read, data EFFF)
# ----------------------------------------------------------------------------------------------------
# Parameters check, clock c0_clk_sqm_adc   
# ----------------------------------------------------------------------------------------------------
# Error number of clock oscillation when enable is inactive : 0
# Error number of high level clock period timing :            0, expected timing: 4002 ps
# Error number of low  level clock period timing :            0, expected timing: 4002 ps
# Error number of clock state when enable goes to inactive :  0, expected state:  '0'
# Error number of clock state when enable goes to active   :  0, expected state:  '0'
# ----------------------------------------------------------------------------------------------------
# Parameters check, clock c1_clk_sqm_adc   
# ----------------------------------------------------------------------------------------------------
# Error number of clock oscillation when enable is inactive : 0
# Error number of high level clock period timing :            0, expected timing: 4002 ps
# Error number of low  level clock period timing :            0, expected timing: 4002 ps
# Error number of clock state when enable goes to inactive :  0, expected state:  '0'
# Error number of clock state when enable goes to active   :  0, expected state:  '0'
# ----------------------------------------------------------------------------------------------------
# Parameters check, clock c2_clk_sqm_adc   
# ----------------------------------------------------------------------------------------------------
# Error number of clock oscillation when enable is inactive : 0
# Error number of high level clock period timing :            0, expected timing: 4002 ps
# Error number of low  level clock period timing :            0, expected timing: 4002 ps
# Error number of clock state when enable goes to inactive :  0, expected state:  '0'
# Error number of clock state when enable goes to active   :  0, expected state:  '0'
# ----------------------------------------------------------------------------------------------------
# Parameters check, clock c3_clk_sqm_adc   
# ----------------------------------------------------------------------------------------------------
# Error number of clock oscillation when enable is inactive : 0
# Error number of high level clock period timing :            0, expected timing: 4002 ps
# Error number of low  level clock period timing :            0, expected timing: 4002 ps
# Error number of clock state when enable goes to inactive :  0, expected state:  '0'
# Error number of clock state when enable goes to active   :  0, expected state:  '0'
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# Error simulation time         : '0'
# Error check discrete level    : '0'
# Error check command return    : '0'
# Error check time              : '0'
# Error check clocks parameters : '0'
# Error check spi parameters    : '0'
# Error check science packets   : '0'
# Error check pulse shaping     : '0'
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# Simulation time               : 900000000 ps
# Simulation status             : PASS
# ------------------------------------------------------------------------------------------------------------------------------------------------------
